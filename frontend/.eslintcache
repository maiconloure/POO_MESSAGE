[{"/home/maiconloure/work/POO_MESSAGE/frontend/src/services/api.ts":"1","/home/maiconloure/work/POO_MESSAGE/frontend/src/App.tsx":"2","/home/maiconloure/work/POO_MESSAGE/frontend/src/pages/home/styled.ts":"3","/home/maiconloure/work/POO_MESSAGE/frontend/src/styled.ts":"4","/home/maiconloure/work/POO_MESSAGE/frontend/src/index.tsx":"5","/home/maiconloure/work/POO_MESSAGE/frontend/src/pages/home/index.tsx":"6","/home/maiconloure/work/POO_MESSAGE/frontend/src/pages/home/template.tsx":"7","/home/maiconloure/work/POO_MESSAGE/frontend/src/components/signup/styled.ts":"8","/home/maiconloure/work/POO_MESSAGE/frontend/src/components/signup/index.tsx":"9","/home/maiconloure/work/POO_MESSAGE/frontend/src/components/messageHistory/index.tsx":"10","/home/maiconloure/work/POO_MESSAGE/frontend/src/components/message/index.tsx":"11","/home/maiconloure/work/POO_MESSAGE/frontend/src/components/message/styled.ts":"12","/home/maiconloure/work/POO_MESSAGE/frontend/src/components/messageHistory/styled.ts":"13"},{"size":134,"mtime":1611411958850,"results":"14","hashOfConfig":"15"},{"size":886,"mtime":1611424501150,"results":"16","hashOfConfig":"15"},{"size":1347,"mtime":1611431910160,"results":"17","hashOfConfig":"15"},{"size":388,"mtime":1611370429400,"results":"18","hashOfConfig":"15"},{"size":197,"mtime":1611372230950,"results":"19","hashOfConfig":"15"},{"size":654,"mtime":1611424299620,"results":"20","hashOfConfig":"15"},{"size":1719,"mtime":1611425131260,"results":"21","hashOfConfig":"15"},{"size":680,"mtime":1611413200610,"results":"22","hashOfConfig":"15"},{"size":1405,"mtime":1611413016460,"results":"23","hashOfConfig":"15"},{"size":2469,"mtime":1611431688160,"results":"24","hashOfConfig":"15"},{"size":2645,"mtime":1611425043160,"results":"25","hashOfConfig":"15"},{"size":752,"mtime":1611415109100,"results":"26","hashOfConfig":"15"},{"size":1160,"mtime":1611431888890,"results":"27","hashOfConfig":"15"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"bkbeop",{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"34","messages":"35","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"36"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"39"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"48","messages":"49","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"50"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/home/maiconloure/work/POO_MESSAGE/frontend/src/services/api.ts",[],"/home/maiconloure/work/POO_MESSAGE/frontend/src/App.tsx",[],"/home/maiconloure/work/POO_MESSAGE/frontend/src/pages/home/styled.ts",[],"/home/maiconloure/work/POO_MESSAGE/frontend/src/styled.ts",["57"],"import styled, { createGlobalStyle } from 'styled-components'\n\nexport const GlobalStyle = createGlobalStyle`\n  body {\n    margin: 0;\n  font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', 'Roboto', 'Oxygen',\n    'Ubuntu', 'Cantarell', 'Fira Sans', 'Droid Sans', 'Helvetica Neue',\n    sans-serif;\n  -webkit-font-smoothing: antialiased;\n  -moz-osx-font-smoothing: grayscale;\n  \n  }\n`","/home/maiconloure/work/POO_MESSAGE/frontend/src/index.tsx",[],["58","59"],"/home/maiconloure/work/POO_MESSAGE/frontend/src/pages/home/index.tsx",["60"],"/home/maiconloure/work/POO_MESSAGE/frontend/src/pages/home/template.tsx",[],"/home/maiconloure/work/POO_MESSAGE/frontend/src/components/signup/styled.ts",[],"/home/maiconloure/work/POO_MESSAGE/frontend/src/components/signup/index.tsx",[],"/home/maiconloure/work/POO_MESSAGE/frontend/src/components/messageHistory/index.tsx",["61"],"import React, { useState } from 'react';\nimport {Component, Select, MessagesBox, SectionBox, Messages, Message }  from './styled';\nimport API from '../../services/api';\n\ninterface IUser {\n  name: string\n  code: string\n}\n\ninterface IUsers {\n  users: IUser[]\n}\n\ninterface IMessageTo {\n  name: string\n  code: string\n}\n\ninterface IMessage {\n  subject: string\n  body: string\n}\n\ninterface IMessageDTO {\n  to: IMessageTo\n  from: IMessageTo\n  message: IMessage\n}\n\nconst MessageHistoryComponent: React.FC<IUsers> = ({users}) => {\n  const [currentUser, setCurrentUser] = useState<string[]>([])\n  const [messages, setMessages] =  useState<IMessageDTO[]>([])\n\n  const getUserMessages = (user: string) => {\n    const data = user.split('-')\n    setCurrentUser(data)\n    API.get(`/messages/${data[1]}`)\n    .then(response => {\n      setMessages(response.data)\n    })\n    .catch(err => {\n      console.error(err)\n    })\n  }\n\n  return (\n    <Component>\n      <Select>\n      <label htmlFor=\"remetente\">Usuário:</label>\n\n      <select name=\"remetente\" onChange={(evt) => {getUserMessages(evt.target.value)}}>\n      {users.length > 0 ? <option value=\"default\">Selecione um usuário</option> : <option value=\"default\">Nenhum usuário cadastrado!</option>}\n\n        {users.map( user => (\n        <option key={user.code} value={`${user.name}-${user.code}`}>{user.name} - {user.code}</option>\n        ))}\n      </select>\n\n      </Select>\n      <MessagesBox>\n          <SectionBox>Mensagens</SectionBox>\n          <Messages>\n          {messages.map((getMessage, index) => {\n            if (getMessage.from.code === currentUser[1]) {\n              return <Message key={index}>\n                <p>{getMessage.message.subject} - Enviada</p>\n                <p>Enviada por <b>{getMessage.from.name}</b> | Recebida por: <b>{getMessage.to.name}</b></p>\n                <i>{getMessage.message.body}</i>\n                <p>{'-'.repeat(100)}</p>\n                </Message>\n            } else if (getMessage.to.code === currentUser[1]) {\n              return <Message key={index}>\n                <p>{getMessage.message.subject} - Recebida</p>\n                <p>Enviada por <b>{getMessage.from.name}</b> | Recebida por: <b>{getMessage.to.name}</b></p>\n                <i>{getMessage.message.body}</i>\n                <p>{'-'.repeat(100)}</p>\n                </Message>\n            }\n          })}\n          </Messages>\n      </MessagesBox>\n    </Component>\n  )\n}\n\nexport default MessageHistoryComponent","/home/maiconloure/work/POO_MESSAGE/frontend/src/components/message/index.tsx",[],"/home/maiconloure/work/POO_MESSAGE/frontend/src/components/message/styled.ts",[],"/home/maiconloure/work/POO_MESSAGE/frontend/src/components/messageHistory/styled.ts",[],{"ruleId":"62","severity":1,"message":"63","line":1,"column":8,"nodeType":"64","messageId":"65","endLine":1,"endColumn":14},{"ruleId":"66","replacedBy":"67"},{"ruleId":"68","replacedBy":"69"},{"ruleId":"62","severity":1,"message":"70","line":10,"column":11,"nodeType":"64","messageId":"65","endLine":10,"endColumn":16},{"ruleId":"71","severity":1,"message":"72","line":63,"column":45,"nodeType":"73","messageId":"74","endLine":63,"endColumn":47},"@typescript-eslint/no-unused-vars","'styled' is defined but never used.","Identifier","unusedVar","no-native-reassign",["75"],"no-negated-in-lhs",["76"],"'IHome' is defined but never used.","array-callback-return","Array.prototype.map() expects a value to be returned at the end of arrow function.","ArrowFunctionExpression","expectedAtEnd","no-global-assign","no-unsafe-negation"]